input {
  file {
    path => "/usr/share/logstash/logdata/jobinfo/jobinfo.log"
    start_position => "end"
    sincedb_path => "/dev/null"
    stat_interval => 0.5
    codec => json {
      target => "message"
    }
  }
}

filter {

    mutate {
      add_field => { "[@metadata][index]" => "%{[message][action_index]}" }
      add_field => { "[@metadata][action]" => "%{[message][action]}" }
      add_field => { "[@metadata][id]" => "%{[message][id]}" }
    }

    ruby {
      code => '
        event_hash = event.get("message")
        event_hash.each { |k, v| event.set(k, v) }
      '
    }

    mutate {
      remove_field => ["message", "filtered_data", "@timestamp", "@version", "host", "log", "event"]
    }
}

output {
  stdout { codec => rubydebug }

  if [@metadata][action] == "insert" {
    elasticsearch {
      hosts => ["http://${ELASTICSEARCH_HOST}:${ELASTICSEARCH_PORT}"]
      index => "%{[@metadata][index]}"
      document_id => "%{[@metadata][id]}"
      action => "index"
    }
  } else if [@metadata][action] == "update" {
    elasticsearch {
      hosts => ["http://${ELASTICSEARCH_HOST}:${ELASTICSEARCH_PORT}"]
      index => "%{[@metadata][index]}"
      document_id => "%{[@metadata][id]}"
      action => "update"
      doc_as_upsert => true
    }
  } else if [@metadata][action] == "delete" {
    elasticsearch {
      hosts => ["http://${ELASTICSEARCH_HOST}:${ELASTICSEARCH_PORT}"]
      index => "%{[@metadata][index]}"
      document_id => "%{[@metadata][id]}"
      action => "delete"
    }
  }
}