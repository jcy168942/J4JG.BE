version: '3.8'

services:
  mysql-master:
    image: mysql:8.0
    container_name: mysql-master
    ports:
      - "${MYSQL_MASTER_PORT}:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_REPLICATION_USER: ${MYSQL_REPLICATION_USER}
      MYSQL_REPLICATION_PASSWORD: ${MYSQL_REPLICATION_PASSWORD}
    volumes:
      - master_data:/var/lib/mysql
      - ./init/setup_master.sh:/docker-entrypoint-initdb.d/setup_master.sh
    command: >
      --server-id=1
      --log-bin=mysql-bin
      --binlog-do-db=${MYSQL_DATABASE}
      --bind-address=0.0.0.0
    networks:
      - mysql_cluster

  mysql-slave:
    image: mysql:8.0
    container_name: mysql-slave
    ports:
      - "${MYSQL_SLAVE_PORT}:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_REPLICATION_USER: ${MYSQL_REPLICATION_USER}
      MYSQL_REPLICATION_PASSWORD: ${MYSQL_REPLICATION_PASSWORD}
    volumes:
      - slave_data:/var/lib/mysql
      - ./init/setup_slave.sh:/docker-entrypoint-initdb.d/setup_slave.sh
    depends_on:
      - mysql-master
    command: >
      --server-id=2
      --relay-log=relay-log
      --log-bin=mysql-bin
      --read-only=1
      --bind-address=0.0.0.0
    networks:
      - mysql_cluster

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - mysql_cluster

volumes:
  master_data:
  slave_data:

networks:
  mysql_cluster:
    driver: bridge
